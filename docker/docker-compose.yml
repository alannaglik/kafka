version: '3'

# Konfiguracja klastra Kafka z trzema brokerami i interfejsem użytkownika Kafka do łatwego monitorowania, wszystko przy użyciu Docker Desktop.
# Dostarczony plik Docker Compose zawiera konfiguracje dla Kafka, Zookeeper i interfejs użytkownika.
# UI dostępny jest pod adresem: http://localhost:8080/
#
# Uruchomienie poleceniem: docker-compose up -d
# Weryfikacja działania: docker-compose ps

services:
  zookeeper:
    image: bitnami/zookeeper:3.9.3
    tmpfs: "/zktmp"
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
      ZOO_ADMINSERVER_ENABLED: "true"
    ports:
      - "2181:2181"
      - "8080:8080"
    networks:
      kafka-net:
        ipv4_address: 172.22.0.4

  kafka1:
    image: bitnami/kafka:3.8.1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://localhost:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      # optional - enable topic auto create
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    ports:
      - "9092:9092"
      - "29092:29092"
    networks:
      kafka-net:
        ipv4_address: 172.22.0.6
    volumes:
      - kafka_data1:/bitnami/kafka

  kafka2:
    image: bitnami/kafka:3.8.1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: INTERNAL://:9093,EXTERNAL://0.0.0.0:29093
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka2:9093,EXTERNAL://localhost:29093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      # optional - enable topic auto create
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    ports:
      - "9093:9093"
      - "29093:29093"
    networks:
      kafka-net:
        ipv4_address: 172.22.0.2
    volumes:
      - kafka_data2:/bitnami/kafka

  kafka3:
    image: bitnami/kafka:3.8.1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: INTERNAL://:9094,EXTERNAL://0.0.0.0:29094
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka3:9094,EXTERNAL://localhost:29094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      # optional - enable topic auto create
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    ports:
      - "9094:9094"
      - "29094:29094"
    networks:
      kafka-net:
        ipv4_address: 172.22.0.3
    volumes:
      - kafka_data3:/bitnami/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    ports:
      - "8081:8080"
    networks:
      kafka-net:
        ipv4_address: 172.22.0.5
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092,kafka2:9093,kafka3:9094
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

volumes:
  kafka_data1:
    driver: local
  kafka_data2:
    driver: local
  kafka_data3:
    driver: local
networks:
  kafka-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/24
